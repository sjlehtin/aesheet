# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-09 23:40
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ammunition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_dice', models.IntegerField(default=1)),
                ('dice', models.IntegerField(default=6)),
                ('extra_damage', models.IntegerField(default=0)),
                ('leth', models.IntegerField(default=5)),
                ('plus_leth', models.IntegerField(default=0)),
                ('label', models.CharField(help_text=b'Ammunition caliber, which should also distinguish between barrel lengths and such.', max_length=20)),
                ('type', models.CharField(default=b'P', help_text=b'Damage type of the ammo.', max_length=10)),
                ('bullet_type', models.CharField(help_text=b'Make of the ammo, such as full metal jacket.', max_length=10)),
                ('bypass', models.IntegerField(default=0)),
                ('weight', models.DecimalField(decimal_places=3, help_text=b'Weight of a single round in grams.  Used to calculate recoil.', max_digits=7)),
                ('velocity', models.IntegerField(help_text=b'Velocity of the bullet at muzzle in meters per second.  Used to calculate recoil.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArmorQuality',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, max_length=5)),
                ('dp_multiplier', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('armor_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('mod_fit_multiplier', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('mod_fit', models.IntegerField(default=0)),
                ('mod_ref', models.IntegerField(default=0)),
                ('mod_psy', models.IntegerField(default=0)),
                ('mod_sensory', models.IntegerField(default=0)),
                ('mod_stealth', models.IntegerField(default=0)),
                ('mod_conceal', models.IntegerField(default=0)),
                ('mod_climb', models.IntegerField(default=0)),
                ('mod_weight_multiplier', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('mod_encumbrance_class', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArmorSpecialQuality',
            fields=[
                ('notes', models.TextField(blank=True)),
                ('cc_skill_levels', models.IntegerField(default=0)),
                ('fit', models.IntegerField(default=0)),
                ('ref', models.IntegerField(default=0)),
                ('lrn', models.IntegerField(default=0)),
                ('int', models.IntegerField(default=0)),
                ('psy', models.IntegerField(default=0)),
                ('wil', models.IntegerField(default=0)),
                ('cha', models.IntegerField(default=0)),
                ('pos', models.IntegerField(default=0)),
                ('mov', models.IntegerField(default=0)),
                ('dex', models.IntegerField(default=0)),
                ('imm', models.IntegerField(default=0)),
                ('saves_vs_fire', models.IntegerField(default=0)),
                ('saves_vs_cold', models.IntegerField(default=0)),
                ('saves_vs_lightning', models.IntegerField(default=0)),
                ('saves_vs_poison', models.IntegerField(default=0)),
                ('saves_vs_all', models.IntegerField(default=0)),
                ('run_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('swim_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('climb_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fly_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[(b'enhancement', b'enhancement'), (b'luck', b'luck'), (b'circumstance', b'circumstance')], default=b'enhancement', help_text=b'Effect type.  With the exception of circumstance bonus, only highest effect of a single type will take effect.', max_length=256)),
                ('armor_h_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArmorTemplate',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('is_helm', models.BooleanField(default=False)),
                ('armor_h_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_dp', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_t_dp', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ll_dp', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_la_dp', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_rl_dp', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_p', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_s', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_b', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_r', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_dr', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_ra_dp', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('armor_h_pl', models.IntegerField(default=0)),
                ('armor_t_pl', models.IntegerField(default=0)),
                ('armor_ll_pl', models.IntegerField(default=0)),
                ('armor_rl_pl', models.IntegerField(default=0)),
                ('armor_la_pl', models.IntegerField(default=0)),
                ('armor_ra_pl', models.IntegerField(default=0)),
                ('mod_fit', models.IntegerField(default=0)),
                ('mod_ref', models.IntegerField(default=0)),
                ('mod_psy', models.IntegerField(default=0)),
                ('mod_vision', models.IntegerField(default=0)),
                ('mod_hear', models.IntegerField(default=0)),
                ('mod_smell', models.IntegerField(default=0)),
                ('mod_surprise', models.IntegerField(default=0)),
                ('mod_stealth', models.IntegerField(default=0)),
                ('mod_conceal', models.IntegerField(default=0)),
                ('mod_climb', models.IntegerField(default=0)),
                ('mod_tumble', models.IntegerField(default=0)),
                ('weight', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('encumbrance_class', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseFirearm',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, help_text=b'This is used when the name must be fit to a small space', max_length=64)),
                ('description', models.TextField(blank=True)),
                ('notes', models.CharField(blank=True, max_length=64)),
                ('draw_initiative', models.IntegerField(blank=True, default=-3, null=True)),
                ('durability', models.IntegerField(default=5)),
                ('dp', models.IntegerField(default=10)),
                ('weight', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('target_initiative', models.IntegerField(default=-2)),
                ('range_pb', models.IntegerField(blank=True, null=True)),
                ('range_xs', models.IntegerField(blank=True, null=True)),
                ('range_vs', models.IntegerField(blank=True, null=True)),
                ('range_s', models.IntegerField()),
                ('range_m', models.IntegerField()),
                ('range_l', models.IntegerField()),
                ('range_xl', models.IntegerField(blank=True, null=True)),
                ('range_e', models.IntegerField(blank=True, null=True)),
                ('autofire_rpm', models.IntegerField(blank=True, null=True)),
                ('autofire_class', models.CharField(blank=True, choices=[(b'A', b'A'), (b'B', b'B'), (b'C', b'C'), (b'D', b'D'), (b'E', b'E')], max_length=1)),
                ('sweep_fire_disabled', models.BooleanField(default=False)),
                ('restricted_burst_rounds', models.IntegerField(default=0)),
                ('stock', models.DecimalField(decimal_places=2, default=1, help_text=b'Weapon stock modifier for recoil calculation.  Larger is better.', max_digits=4)),
                ('duration', models.DecimalField(decimal_places=3, default=0.1, help_text=b'Modifier for recoil.  In principle, time in seconds from the muzzle break, whatever that means.  Bigger is better.', max_digits=5)),
                ('weapon_class_modifier', models.DecimalField(decimal_places=2, default=6, help_text=b'ROF modifier for weapon class.  Generally from 6-15, smaller is better.', max_digits=4)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('has_firearms', models.BooleanField(default=False)),
                ('has_spells', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('private', models.BooleanField(default=False, help_text=b'If set, access to the character will be denied for other users.  The character will also be hidden in lists.  As a rule of thumb, only the GM should mark characters as private.')),
                ('occupation', models.CharField(max_length=256)),
                ('portrait', models.ImageField(blank=True, upload_to=b'portraits')),
                ('race', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True)),
                ('age', models.PositiveIntegerField(default=20)),
                ('unnatural_aging', models.IntegerField(default=0)),
                ('height', models.IntegerField(default=175)),
                ('weigth', models.IntegerField(default=75)),
                ('times_wounded', models.PositiveIntegerField(default=0)),
                ('size', models.CharField(choices=[(b'F', b'Fine'), (b'D', b'Diminutive'), (b'T', b'Tiny'), (b'S', b'Small'), (b'M', b'Medium'), (b'L', b'Large'), (b'H', b'Huge'), (b'G', b'Gargantuan'), (b'C', b'Colossal')], default=b'M', max_length=1)),
                ('hero', models.BooleanField(default=False)),
                ('deity', models.CharField(blank=True, max_length=256)),
                ('adventures', models.PositiveIntegerField(default=0)),
                ('gained_sp', models.PositiveIntegerField(default=0)),
                ('xp_used_ingame', models.PositiveIntegerField(default=0)),
                ('bought_stamina', models.PositiveIntegerField(default=0)),
                ('bought_mana', models.PositiveIntegerField(default=0)),
                ('edges_bought', models.PositiveIntegerField(default=0)),
                ('total_xp', models.PositiveIntegerField(default=0)),
                ('start_fit', models.PositiveIntegerField(default=43)),
                ('start_ref', models.PositiveIntegerField(default=43)),
                ('start_lrn', models.PositiveIntegerField(default=43)),
                ('start_int', models.PositiveIntegerField(default=43)),
                ('start_psy', models.PositiveIntegerField(default=43)),
                ('start_wil', models.PositiveIntegerField(default=43)),
                ('start_cha', models.PositiveIntegerField(default=43)),
                ('start_pos', models.PositiveIntegerField(default=43)),
                ('cur_fit', models.PositiveIntegerField(default=43)),
                ('cur_ref', models.PositiveIntegerField(default=43)),
                ('cur_lrn', models.PositiveIntegerField(default=43)),
                ('cur_int', models.PositiveIntegerField(default=43)),
                ('cur_psy', models.PositiveIntegerField(default=43)),
                ('cur_wil', models.PositiveIntegerField(default=43)),
                ('cur_cha', models.PositiveIntegerField(default=43)),
                ('cur_pos', models.PositiveIntegerField(default=43)),
                ('base_mod_fit', models.IntegerField(default=0)),
                ('base_mod_ref', models.IntegerField(default=0)),
                ('base_mod_lrn', models.IntegerField(default=0)),
                ('base_mod_int', models.IntegerField(default=0)),
                ('base_mod_psy', models.IntegerField(default=0)),
                ('base_mod_wil', models.IntegerField(default=0)),
                ('base_mod_cha', models.IntegerField(default=0)),
                ('base_mod_pos', models.IntegerField(default=0)),
                ('base_mod_mov', models.IntegerField(default=0)),
                ('base_mod_dex', models.IntegerField(default=0)),
                ('base_mod_imm', models.IntegerField(default=0)),
                ('free_edges', models.IntegerField(default=2)),
                ('last_update_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Campaign')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['campaign', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges', to='sheet.Character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('entry_type', models.PositiveIntegerField(choices=[(0, b'stat'), (1, b'skill'), (2, b'edge'), (3, b'non-field')], default=0)),
                ('entry', models.TextField(blank=True, help_text=b'Additional information about this entry, input by the user.')),
                ('field', models.CharField(blank=True, max_length=64)),
                ('amount', models.IntegerField(default=0)),
                ('skill_level', models.PositiveIntegerField(default=0)),
                ('edge_level', models.IntegerField(default=0)),
                ('removed', models.BooleanField(default=False, help_text=b'Setting this means that the edge or skill was removed instead of added.')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Character')),
            ],
            options={
                'ordering': ['-timestamp'],
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.CreateModel(
            name='CharacterSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=0)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='sheet.Character')),
            ],
            options={
                'ordering': ('skill__name',),
            },
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EdgeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('cc_skill_levels', models.IntegerField(default=0)),
                ('fit', models.IntegerField(default=0)),
                ('ref', models.IntegerField(default=0)),
                ('lrn', models.IntegerField(default=0)),
                ('int', models.IntegerField(default=0)),
                ('psy', models.IntegerField(default=0)),
                ('wil', models.IntegerField(default=0)),
                ('cha', models.IntegerField(default=0)),
                ('pos', models.IntegerField(default=0)),
                ('mov', models.IntegerField(default=0)),
                ('dex', models.IntegerField(default=0)),
                ('imm', models.IntegerField(default=0)),
                ('saves_vs_fire', models.IntegerField(default=0)),
                ('saves_vs_cold', models.IntegerField(default=0)),
                ('saves_vs_lightning', models.IntegerField(default=0)),
                ('saves_vs_poison', models.IntegerField(default=0)),
                ('saves_vs_all', models.IntegerField(default=0)),
                ('run_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('swim_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('climb_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fly_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('level', models.IntegerField(default=1)),
                ('cost', models.DecimalField(decimal_places=1, max_digits=4)),
                ('requires_hero', models.BooleanField(default=False)),
                ('edge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Edge')),
            ],
            options={
                'ordering': ('edge', 'level'),
            },
        ),
        migrations.CreateModel(
            name='EdgeSkillBonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus', models.IntegerField(default=15)),
                ('edge_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.EdgeLevel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Firearm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Ammunition')),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.BaseFirearm')),
            ],
        ),
        migrations.CreateModel(
            name='FirearmAmmunitionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_label', models.CharField(help_text=b'Matches the respective field in ammunition', max_length=20)),
                ('firearm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ammunition_types', to='sheet.BaseFirearm')),
            ],
        ),
        migrations.CreateModel(
            name='MiscellaneousItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('armor_qualities', models.ManyToManyField(blank=True, to='sheet.ArmorSpecialQuality')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RangedWeapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256)),
                ('description', models.TextField(blank=True)),
                ('size', models.PositiveSmallIntegerField(choices=[(1, b'normal'), (2, b'double'), (3, b'triple'), (4, b'quadruple')], default=1)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RangedWeaponTemplate',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, help_text=b'This is used when the name must be fit to a small space', max_length=64)),
                ('description', models.TextField(blank=True)),
                ('notes', models.CharField(blank=True, max_length=64)),
                ('draw_initiative', models.IntegerField(blank=True, default=-3, null=True)),
                ('durability', models.IntegerField(default=5)),
                ('dp', models.IntegerField(default=10)),
                ('weight', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('num_dice', models.IntegerField(default=1)),
                ('dice', models.IntegerField(default=6)),
                ('extra_damage', models.IntegerField(default=0)),
                ('leth', models.IntegerField(default=5)),
                ('plus_leth', models.IntegerField(default=0)),
                ('roa', models.DecimalField(decimal_places=3, default=1.0, max_digits=4)),
                ('bypass', models.IntegerField(default=0)),
                ('target_initiative', models.IntegerField(default=-2)),
                ('range_pb', models.IntegerField(blank=True, null=True)),
                ('range_xs', models.IntegerField(blank=True, null=True)),
                ('range_vs', models.IntegerField(blank=True, null=True)),
                ('range_s', models.IntegerField()),
                ('range_m', models.IntegerField()),
                ('range_l', models.IntegerField()),
                ('range_xl', models.IntegerField(blank=True, null=True)),
                ('range_e', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(default=b'P', max_length=5)),
                ('ammo_weight', models.DecimalField(decimal_places=1, default=0.1, max_digits=4)),
                ('weapon_type', models.CharField(choices=[(b'thrown', b'thrown'), (b'xbow', b'xbow'), (b'bow', b'bow')], default=b'thrown', max_length=10)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('size', models.CharField(choices=[(b'F', b'Fine'), (b'D', b'Diminutive'), (b'T', b'Tiny'), (b'S', b'Small'), (b'M', b'Medium'), (b'L', b'Large'), (b'H', b'Huge'), (b'G', b'Gargantuan'), (b'C', b'Colossal')], default=b'M', max_length=1)),
                ('extra_weight_carried', models.IntegerField(default=0, help_text=b'Extra encumbrance the character is carrying')),
                ('last_update_at', models.DateTimeField(auto_now=True)),
                ('armor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sheet.Armor')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Character')),
                ('firearms', models.ManyToManyField(blank=True, to='sheet.Firearm')),
                ('helm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='helm_for', to='sheet.Armor')),
                ('miscellaneous_items', models.ManyToManyField(blank=True, to='sheet.MiscellaneousItem')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sheets', to=settings.AUTH_USER_MODEL)),
                ('ranged_weapons', models.ManyToManyField(blank=True, to='sheet.RangedWeapon')),
            ],
            options={
                'ordering': ('character__name',),
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('can_be_defaulted', models.BooleanField(default=True)),
                ('is_specialization', models.BooleanField(default=False)),
                ('skill_cost_0', models.IntegerField(blank=True, null=True)),
                ('skill_cost_1', models.IntegerField(blank=True, null=True)),
                ('skill_cost_2', models.IntegerField(blank=True, null=True)),
                ('skill_cost_3', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(choices=[(b'Physical', b'Physical'), (b'Combat', b'Combat'), (b'Specialty', b'Specialty'), (b'Education', b'Education'), (b'Social', b'Social'), (b'Mystical', b'Mystical'), (b'Mage', b'Mage'), (b'Priest', b'Priest'), (b'Language', b'Language')], max_length=64)),
                ('stat', models.CharField(choices=[(b'FIT', b'FIT'), (b'REF', b'REF'), (b'LRN', b'LRN'), (b'INT', b'INT'), (b'PSY', b'PSY'), (b'WIL', b'WIL'), (b'CHA', b'CHA'), (b'POS', b'POS'), (b'DEX', b'DEX'), (b'MOV', b'MOV'), (b'IMM', b'IMM')], max_length=64)),
                ('required_edges', models.ManyToManyField(blank=True, null=True, to='sheet.Edge')),
                ('required_skills', models.ManyToManyField(blank=True, null=True, to='sheet.Skill')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpellEffect',
            fields=[
                ('notes', models.TextField(blank=True)),
                ('cc_skill_levels', models.IntegerField(default=0)),
                ('fit', models.IntegerField(default=0)),
                ('ref', models.IntegerField(default=0)),
                ('lrn', models.IntegerField(default=0)),
                ('int', models.IntegerField(default=0)),
                ('psy', models.IntegerField(default=0)),
                ('wil', models.IntegerField(default=0)),
                ('cha', models.IntegerField(default=0)),
                ('pos', models.IntegerField(default=0)),
                ('mov', models.IntegerField(default=0)),
                ('dex', models.IntegerField(default=0)),
                ('imm', models.IntegerField(default=0)),
                ('saves_vs_fire', models.IntegerField(default=0)),
                ('saves_vs_cold', models.IntegerField(default=0)),
                ('saves_vs_lightning', models.IntegerField(default=0)),
                ('saves_vs_poison', models.IntegerField(default=0)),
                ('saves_vs_all', models.IntegerField(default=0)),
                ('run_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('swim_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('climb_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fly_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[(b'enhancement', b'enhancement'), (b'luck', b'luck'), (b'circumstance', b'circumstance')], default=b'enhancement', help_text=b'Effect type.  With the exception of circumstance bonus, only highest effect of a single type will take effect.', max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TechLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256)),
                ('description', models.TextField(blank=True)),
                ('size', models.PositiveSmallIntegerField(choices=[(1, b'normal'), (2, b'double'), (3, b'triple'), (4, b'quadruple')], default=1)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponQuality',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, max_length=5)),
                ('roa', models.DecimalField(decimal_places=4, default=0, max_digits=6)),
                ('ccv', models.IntegerField(default=0)),
                ('damage', models.IntegerField(default=0)),
                ('leth', models.IntegerField(default=0)),
                ('plus_leth', models.IntegerField(default=0)),
                ('bypass', models.IntegerField(default=0)),
                ('durability', models.IntegerField(default=0)),
                ('dp_multiplier', models.DecimalField(decimal_places=4, default=1, max_digits=6)),
                ('weight_multiplier', models.DecimalField(decimal_places=4, default=1, max_digits=6)),
                ('notes', models.CharField(blank=True, max_length=256)),
                ('defense_leth', models.IntegerField(default=0)),
                ('versus_missile_modifier', models.IntegerField(default=0)),
                ('versus_area_save_modifier', models.IntegerField(default=0)),
                ('max_fit', models.IntegerField(default=90, help_text=b'Applies for bows, this is the maximum FIT the weapon pull adjusts to.  This caps the damage and range of the weapon in case the character has a higher FIT than this.')),
                ('tech_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel')),
            ],
            options={
                'ordering': ['roa', 'ccv'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponSpecialQuality',
            fields=[
                ('notes', models.TextField(blank=True)),
                ('cc_skill_levels', models.IntegerField(default=0)),
                ('fit', models.IntegerField(default=0)),
                ('ref', models.IntegerField(default=0)),
                ('lrn', models.IntegerField(default=0)),
                ('int', models.IntegerField(default=0)),
                ('psy', models.IntegerField(default=0)),
                ('wil', models.IntegerField(default=0)),
                ('cha', models.IntegerField(default=0)),
                ('pos', models.IntegerField(default=0)),
                ('mov', models.IntegerField(default=0)),
                ('dex', models.IntegerField(default=0)),
                ('imm', models.IntegerField(default=0)),
                ('saves_vs_fire', models.IntegerField(default=0)),
                ('saves_vs_cold', models.IntegerField(default=0)),
                ('saves_vs_lightning', models.IntegerField(default=0)),
                ('saves_vs_poison', models.IntegerField(default=0)),
                ('saves_vs_all', models.IntegerField(default=0)),
                ('run_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('swim_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('climb_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('fly_multiplier', models.DecimalField(decimal_places=2, default=0, max_digits=4)),
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[(b'enhancement', b'enhancement'), (b'luck', b'luck'), (b'circumstance', b'circumstance')], default=b'enhancement', help_text=b'Effect type.  With the exception of circumstance bonus, only highest effect of a single type will take effect.', max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponTemplate',
            fields=[
                ('name', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('short_name', models.CharField(blank=True, help_text=b'This is used when the name must be fit to a small space', max_length=64)),
                ('description', models.TextField(blank=True)),
                ('notes', models.CharField(blank=True, max_length=64)),
                ('draw_initiative', models.IntegerField(blank=True, default=-3, null=True)),
                ('durability', models.IntegerField(default=5)),
                ('dp', models.IntegerField(default=10)),
                ('weight', models.DecimalField(decimal_places=1, default=1.0, max_digits=4)),
                ('num_dice', models.IntegerField(default=1)),
                ('dice', models.IntegerField(default=6)),
                ('extra_damage', models.IntegerField(default=0)),
                ('leth', models.IntegerField(default=5)),
                ('plus_leth', models.IntegerField(default=0)),
                ('roa', models.DecimalField(decimal_places=3, default=1.0, max_digits=4)),
                ('bypass', models.IntegerField(default=0)),
                ('type', models.CharField(default=b'S', max_length=5)),
                ('ccv', models.IntegerField(default=10)),
                ('ccv_unskilled_modifier', models.IntegerField(default=-10)),
                ('defense_leth', models.IntegerField(default=5)),
                ('is_lance', models.BooleanField(default=False)),
                ('is_shield', models.BooleanField(default=False)),
                ('base_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_skill_for_weapontemplate', to='sheet.Skill')),
                ('skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_for_weapontemplate', to='sheet.Skill')),
                ('skill2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_for_weapontemplate', to='sheet.Skill')),
                ('tech_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='weapon',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.WeaponTemplate'),
        ),
        migrations.AddField(
            model_name='weapon',
            name='quality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.WeaponQuality'),
        ),
        migrations.AddField(
            model_name='weapon',
            name='special_qualities',
            field=models.ManyToManyField(blank=True, to='sheet.WeaponSpecialQuality'),
        ),
        migrations.AddField(
            model_name='skill',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='sheet',
            name='spell_effects',
            field=models.ManyToManyField(blank=True, to='sheet.SpellEffect'),
        ),
        migrations.AddField(
            model_name='sheet',
            name='weapons',
            field=models.ManyToManyField(blank=True, to='sheet.Weapon'),
        ),
        migrations.AddField(
            model_name='rangedweapontemplate',
            name='base_skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_skill_for_rangedweapontemplate', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='rangedweapontemplate',
            name='skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_for_rangedweapontemplate', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='rangedweapontemplate',
            name='skill2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_for_rangedweapontemplate', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='rangedweapontemplate',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='rangedweapon',
            name='ammo_quality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rangedweaponammo_set', to='sheet.WeaponQuality'),
        ),
        migrations.AddField(
            model_name='rangedweapon',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.RangedWeaponTemplate'),
        ),
        migrations.AddField(
            model_name='rangedweapon',
            name='quality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.WeaponQuality'),
        ),
        migrations.AddField(
            model_name='rangedweapon',
            name='special_qualities',
            field=models.ManyToManyField(blank=True, to='sheet.WeaponSpecialQuality'),
        ),
        migrations.AddField(
            model_name='miscellaneousitem',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='miscellaneousitem',
            name='weapon_qualities',
            field=models.ManyToManyField(blank=True, to='sheet.WeaponSpecialQuality'),
        ),
        migrations.AddField(
            model_name='edgeskillbonus',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='edgelevel',
            name='skill_bonuses',
            field=models.ManyToManyField(blank=True, null=True, through='sheet.EdgeSkillBonus', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='characterskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='characterlogentry',
            name='edge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sheet.EdgeLevel'),
        ),
        migrations.AddField(
            model_name='characterlogentry',
            name='skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='characterlogentry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='characteredge',
            name='edge',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.EdgeLevel'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='tech_levels',
            field=models.ManyToManyField(to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='basefirearm',
            name='base_skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_skill_for_basefirearm', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='basefirearm',
            name='skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_for_basefirearm', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='basefirearm',
            name='skill2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_for_basefirearm', to='sheet.Skill'),
        ),
        migrations.AddField(
            model_name='basefirearm',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='armortemplate',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='armorquality',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AddField(
            model_name='armor',
            name='base',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.ArmorTemplate'),
        ),
        migrations.AddField(
            model_name='armor',
            name='quality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.ArmorQuality'),
        ),
        migrations.AddField(
            model_name='armor',
            name='special_qualities',
            field=models.ManyToManyField(blank=True, to='sheet.ArmorSpecialQuality'),
        ),
        migrations.AddField(
            model_name='ammunition',
            name='tech_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sheet.TechLevel'),
        ),
        migrations.AlterUniqueTogether(
            name='characterskill',
            unique_together=set([('character', 'skill')]),
        ),
    ]

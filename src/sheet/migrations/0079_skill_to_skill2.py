# Generated by Django 5.0.6 on 2024-07-14 16:33

from django.db import migrations


def skills(apps, schema_editor):
    Skill = apps.get_model('sheet', 'Skill')
    Skill2 = apps.get_model('sheet', 'Skill2')

    for skill in Skill.objects.all():
        skill2 = Skill2()
        skill2.name = skill.name
        skill2.description = skill.description
        skill2.notes = skill.notes
        skill2.can_be_defaulted = skill.can_be_defaulted
        skill2.is_specialization = skill.is_specialization

        skill2.tech_level = skill.tech_level

        skill2.skill_cost_0 = skill.skill_cost_0
        skill2.skill_cost_1 = skill.skill_cost_1
        skill2.skill_cost_2 = skill.skill_cost_2
        skill2.skill_cost_3 = skill.skill_cost_3

        skill2.type = skill.type

        skill2.stat = skill.stat

        skill2.powered_ref_counter = skill.powered_ref_counter
        skill2.powered_fit_mod = skill.powered_fit_mod

        skill2.save()

        for e in skill.required_edges.all():
            skill2.required_edges.add(e)

    for skill in Skill.objects.all():
        for e in skill.required_edges.all():
            skill2.required_skills.add(Skill2.objects.get(name=e.name))



def basefirearms(apps, schema_editor):
    Skill2 = apps.get_model('sheet', 'Skill2')
    BaseFirearm = apps.get_model('sheet', 'BaseFirearm')

    for fa in BaseFirearm.objects.all():
        fa.base_skill_new = Skill2.objects.get(name=fa.base_skill.name)
        if fa.skill:
            fa.skill_new = Skill2.objects.get(name=fa.skill.name)
        if fa.skill2:
            fa.skill2_new = Skill2.objects.get(name=fa.skill2.name)
        fa.save()


def ranged_weapon_templates(apps, schema_editor):
    Skill2 = apps.get_model('sheet', 'Skill2')
    RangedWeaponTemplate = apps.get_model('sheet', 'RangedWeaponTemplate')

    for rwt in RangedWeaponTemplate.objects.all():
        rwt.base_skill_new = Skill2.objects.get(name=rwt.base_skill.name)
        if rwt.skill:
            rwt.skill_new = Skill2.objects.get(name=rwt.skill.name)
        if rwt.skill2:
            rwt.skill2_new = Skill2.objects.get(name=rwt.skill2.name)
        rwt.save()


def weapon_templates(apps, schema_editor):
    Skill2 = apps.get_model('sheet', 'Skill2')
    WeaponTemplate = apps.get_model('sheet', 'WeaponTemplate')

    for wt in WeaponTemplate.objects.all():
        wt.base_skill_new = Skill2.objects.get(name=wt.base_skill.name)
        if wt.skill:
            wt.skill_new = Skill2.objects.get(name=wt.skill.name)
        if wt.skill2:
            wt.skill2_new = Skill2.objects.get(name=wt.skill2.name)
        wt.save()


#     - Add field base_skill_new to basefirearm
#     - Add field skill2_new to basefirearm
#     - Add field skill_new to basefirearm
#     - Add field base_skill_new to rangedweapontemplate
#     - Add field skill2_new to rangedweapontemplate
#     - Add field skill_new to rangedweapontemplate
#     - Add field base_skill_new to weapontemplate
#     - Add field skill2_new to weapontemplate
#     - Add field skill_new to weapontemplate


def character_log_entries(apps, schema_editor):
    Skill2 = apps.get_model('sheet', 'Skill2')
    CharacterLogEntry = apps.get_model('sheet', 'CharacterLogEntry')

    for le in CharacterLogEntry.objects.all():
        if le.skill:
            le.skill_new = Skill2.objects.get(name=le.skill.name)
            le.save()


def character_skills(apps, schema_editor):
    Skill2 = apps.get_model('sheet', 'Skill2')
    CharacterSkill = apps.get_model('sheet', 'CharacterSkill')

    for cs in CharacterSkill.objects.all():
        if cs.skill:
            cs.skill_new = Skill2.objects.get(name=cs.skill.name)
            cs.save()


def edge_skill_bonuses(apps, schema_editor):
    Skill2 = apps.get_model('sheet', 'Skill2')
    EdgeSkillBonus = apps.get_model('sheet', 'EdgeSkillBonus')

    for sb in EdgeSkillBonus.objects.all():
        if sb.skill:
            sb.skill_new = Skill2.objects.get(name=sb.skill.name)
            sb.save()


#     - Add field skill_new to characterlogentry
#     - Add field skill_new to characterskill
#     - Add field skill_new to edgeskillbonus


class Migration(migrations.Migration):
    dependencies = [
        ("sheet", "0078_basefirearm_base_skill_new_basefirearm_skill2_new_and_more"),
    ]

    operations = [
        migrations.RunPython(skills, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(basefirearms, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(ranged_weapon_templates, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(weapon_templates,
                             reverse_code=migrations.RunPython.noop),
        migrations.RunPython(character_log_entries,
                             reverse_code=migrations.RunPython.noop),
        migrations.RunPython(character_skills,
                             reverse_code=migrations.RunPython.noop),
        migrations.RunPython(edge_skill_bonuses,
                             reverse_code=migrations.RunPython.noop),

    ]
